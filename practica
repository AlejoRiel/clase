# Ejercicios de Practica:

"""
1- Variables:
Pide al usuario que ingrese su nombre y luego imprime un mensaje de bienvenida utilizando esa variable.

2-Estructuras condicionales (if, elif, else):
Escribe un programa que solicite al usuario ingresar un número y luego determine si es positivo, negativo o cero.

3-Bucles (while, for):
Utilizando un bucle while, imprime los números del 1 al 10 en orden ascendente.
Utilizando un bucle for, imprime los números pares del 1 al 20.

4-Listas:
Crea una lista de nombres de personas y luego itera sobre ella para imprimir cada nombre en una línea.

5-Tuplas:
Crea una tupla de colores y luego itera sobre ella para imprimir cada color en una línea.

6-Diccionarios:
Crea un diccionario con nombres de ciudades como clave y su población como valor. Luego, itera sobre el diccionario e imprime el nombre de la ciudad y su población.

7-Programación orientada a objetos (POO):
Crea una clase llamada "Rectángulo" con atributos de longitud y ancho. Implementa métodos para calcular el área y el perímetro del rectángulo.

8-Método especial str:
Modifica la clase "Rectángulo" anterior para que el método str devuelva una representación legible del rectángulo.

9-Herencia y herencia múltiple:
Crea una clase base llamada "Vehículo" con atributos como marca, modelo y año. Luego, crea clases derivadas como "Automóvil" que tengan el atributo puertas y "Motocicleta" que tengan el atributo cilindrada y que hereden de la clase base.

10- POO
Crea una clase llamada Estudiante que represente a un estudiante de una institución educativa. La clase debe tener los siguientes atributos:
nombre: el nombre del estudiante.
edad: la edad del estudiante.
calificaciones: una lista de calificaciones del estudiante en diferentes asignaturas.

La clase Estudiante debe tener los siguientes métodos:
calcular_promedio(): este método calcula el promedio de las calificaciones del estudiante y lo devuelve como resultado.
obtener_estado(): este método determina si el estudiante está aprobado o reprobado. Si el promedio de calificaciones es mayor o igual a 70, el estudiante se considera aprobado; de lo contrario, se considera reprobado.

Además, implementa el método especial __str__ en la clase Estudiante para que al imprimir un objeto estudiante, se muestre su nombre y edad de forma legible.

Crea una lista de estudiantes con al menos 3 instancias de la clase Estudiante, cada una con diferentes nombres, edades y calificaciones. Luego, utiliza un bucle for para recorrer la lista de estudiantes y mostrar la siguiente información de cada estudiante:
Nombre y edad del estudiante.
Promedio de calificaciones del estudiante.
Estado (aprobado o reprobado) del estudiante, basado en su promedio de calificaciones.
"""
#1_
#name= input("ingrese su nombre:")
#print("BIENVENIDO: " +name)

#2_
#num=int(input("ingrese un numero: "))
#if num >0:
#    print(f"El numero es positivo: {num}")
#elif num <0:
#    print(f"el numero es negativo: {num}")
#else:
#    print("El numero es 0")


#3_
#i=1
#while i < 11:
#    print(i)
#    i=i+1

#print("\n")

#for i in range (21):
#    if i%2==0:
#        print(i)
#    i+=1    

#4_
#nombres=["Alejo","Facundo","Agustina"]
#for lista in nombres:
#    print(lista)


................................................
# 1

print("Ejercicio N° 1 \n")

name = input("Ingrese su nombre: ")
print(f"Bienvenido! {name}")

print("\n")

# 2

print("Ejercicio N° 2 \n")

num = int(input("Ingrese un numero: "))

if num > 0:
    print(f"El numero es positivo")
elif num < 0:
    print(f"El numero es negativo")
else:
    print(f"El numero es 0")

print("\n")

# 3

print("Ejercicio N° 3 \n")

i = 0
while i < 10:
    i += 1
    print(i)

for i in range(1, 21):
    print(i)

print("\n")

# 4

print("Ejercicio N° 4 \n")

nombres = ["Juan", "Pepe", "Fulano"]

for nombre in nombres:
    print(nombre)

print("\n")

# 5

print("Ejercicio N° 5 \n")

colores = ("azul", "verde", "amarillo")

for color in colores:
    print(color)

print("\n")

# 6

print("Ejercicio N° 6 \n")

cuidades = {"Buenos Aires" : 10000, "El Calafate" : 120300 , "Mendoza" : 5000}

for key, valor in cuidades.items():
    print(f"La cuidad de {key} tiene {valor} habitantes")

print("\n")

# 7

print("Ejercicio N° 7 \n")

class Rectángulo:
    def __init__(self, longitud, ancho, base, altura):
        self.longitud = longitud
        self.ancho = ancho
        self.base = base
        self.altura = altura
    
    def calcular_area(self, base, altura):
        self.base = base
        self.altura = altura
        return f"La base es: {base * altura / 2}" 
    
    def calcular_perimetro(self, lado_1, lado_2, lado_3):
        self.lado_1 = lado_1
        self.lado_2 = lado_2
        self.lado_3 = lado_3
        if lado_1 == lado_2 and lado_1 == lado_3 and lado_2 == lado_3 and lado_3 == lado_1:
            return "Es un triangulo equilatero"
        return f"El perimetro es: {lado_1 + lado_2 + lado_3}"
         
    
r = Rectángulo(0, 0, 1, 2)

calculo_a = r.calcular_area(1, 2)

print(calculo_a)

calculo_p = r.calcular_perimetro( 45, 60 , 89)

print(calculo_p)

print("\n")

# 8

print("Ejercicio N° 8 \n")

class Rectángulo:
    def __init__(self, longitud, ancho, base, altura):
        self.longitud = longitud
        self.ancho = ancho
        self.base = base
        self.altura = altura
    
    def __str__(self):
        return f"La longitud es {self.longitud}, el ancho es de {self.ancho}, la base es igual {self.base} y la altura es de {self.altura}"

r = Rectángulo(1, 1, 1, 4)

print(r)

print("\n")

# 9

class Vehículo:
    def __init__(self, marca, modelo, año):
        self.marca = marca
        self.modelo = modelo
        self.año = año
class Automóvil(Vehículo):
    def __init__(self, marca, modelo, año, puertas):
        super().__init__(marca, modelo, año)
        self.puertas = puertas
class Motocicleta(Vehículo):
    def __init__(self, marca, modelo, año, cilindrada):
        super().__init__(marca, modelo, año)
        self.cilindrada = cilindrada
    
print("\n")

# 10

class Estudiante:
    def __init__(self, nombre, edad, calificaciones):
        self.nombre = nombre
        self.edad = edad
        self.calificaciones = [calificaciones]
    def calcular_promedio(self, calificaciones):
        suma = sum(self.calificaciones)
        r = int(suma)
        self.calificaciones = calificaciones
        return f"El promedio del alumno es {r / len(self.calificaciones)}"

    def obtener_estado(self, calificaciones):
        if sum(calificaciones) / len(calificaciones) >= 70:
            return f"el estudiante {self.nombre} se considera aprobado"
        else:
            return f"el estudiante {self.nombre} se esta desaprobado"

    def __str__(self):
        return f"El {self.nombre} alumno tiene {self.edad} años"



f = Estudiante("Joaquin", 20, [5, 2, 3])
f.calcular_promedio([1, 2, 3])
-----------------------------------------------------------
#HECHOS POR EL PROFE

#1-
nombre = input("Ingrese su nombre: ")
print("¡Hola,", nombre, "! Bienvenido.")


#2-
numero = int(input("Ingrese un número: "))
if numero > 0:
    print("El número es positivo.")
elif numero < 0:
    print("El número es negativo.")
else:
    print("El número es cero.")

#3-
# Bucle while
contador = 1
while contador <= 10:
    print(contador)
    contador += 1

# Bucle for
for numero in range(2, 21, 2):
    print(numero)

#4-
nombres = ["Juan", "María", "Carlos", "Ana"]
for nombre in nombres:
    print(nombre)

#5-
colores = ("rojo", "verde", "azul")
for color in colores:
    print(color)

#6-
ciudades = {"Lima": 9500000, "Buenos Aires": 3075646, "Ciudad de México": 8851080}
for ciudad, poblacion in ciudades.items():
    print(ciudad, "- Población:", poblacion)

#7-
class Rectángulo:
    def __init__(self, longitud, ancho):
        self.longitud = longitud
        self.ancho = ancho

    def calcular_area(self):
        return self.longitud * self.ancho

    def calcular_perimetro(self):
        return 2 * (self.longitud + self.ancho)

rectangulo = Rectángulo(5, 3)
print("Área:", rectangulo.calcular_area())
print("Perímetro:", rectangulo.calcular_perimetro())

#8-
class Rectángulo:
    def __init__(self, longitud, ancho):
        self.longitud = longitud
        self.ancho = ancho

    def calcular_area(self):
        return self.longitud * self.ancho

    def calcular_perimetro(self):
        return 2 * (self.longitud + self.ancho)

    def __str__(self):
        return f"Rectángulo de longitud {self.longitud} y ancho {self.ancho}"

rectangulo = Rectángulo(5, 3)
print(rectangulo)

#9-
class Vehículo:
    def __init__(self, marca, modelo, año):
        self.marca = marca
        self.modelo = modelo
        self.año = año

class Automóvil(Vehículo):
    def __init__(self, marca, modelo, año, puertas):
        super().__init__(marca, modelo, año)
        self.puertas = puertas

class Motocicleta(Vehículo):
    def __init__(self, marca, modelo, año, cilindrada):
        super().__init__(marca, modelo, año)
        self.cilindrada = cilindrada


#10-
class Estudiante:
    def __init__(self, nombre, edad, calificaciones):
        self.nombre = nombre
        self.edad = edad
        self.calificaciones = calificaciones

    def calcular_promedio(self):
        total_calificaciones = sum(self.calificaciones)
        promedio = total_calificaciones / len(self.calificaciones)
        return promedio

    def obtener_estado(self):
        promedio = self.calcular_promedio()
        if promedio >= 70:
            return "Aprobado"
        else:
            return "Reprobado"

    def __str__(self):
        return f"Estudiante: {self.nombre}, Edad: {self.edad}"

# Crear una lista de estudiantes
estudiantes = [
    Estudiante("Juan", 20, [80, 75, 90]),
    Estudiante("María", 19, [70, 65, 80]),
    Estudiante("Carlos", 21, [60, 55, 70])
]

# Iterar sobre la lista de estudiantes y mostrar su información
for estudiante in estudiantes:
    print(estudiante)
    print("Promedio:", estudiante.calcular_promedio())
    print("Estado:", estudiante.obtener_estado())
    print()



